name: ROS 2 CI

on:
  push:
    branches: [main]
  pull_request:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-22.04

    container:
      image: ros:humble-ros-base

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt update
          apt install -y python3-colcon-common-extensions python3-pip
          rosdep update
          rosdep install --from-paths ros2_ws/src --ignore-src -r -y

      - name: Build workspace
        run: |
          source /opt/ros/humble/setup.bash
          cd ros2_ws
          colcon build --event-handlers console_direct+

  simulate:
    runs-on: ubuntu-22.04
    needs: build

    container:
      image: ros:humble-ros-base

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt update
          apt install -y python3-colcon-common-extensions python3-pip
          rosdep update
          rosdep install --from-paths ros2_ws/src --ignore-src -r -y

      - name: Build workspace
        run: |
          source /opt/ros/humble/setup.bash
          cd ros2_ws
          colcon build

      - name: Launch simulation (timed)
        run: |
          source /opt/ros/humble/setup.bash
          source ros2_ws/install/setup.bash
          echo "[CI] Launching simulation for 15 seconds..."
          timeout 15 ros2 launch sim_demo sim.launch.py || [[ $? == 124 ]]
          echo "[CI] Launch exited cleanly."

  docker:
    runs-on: ubuntu-22.04
    needs: simulate

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/ros2_cicd:latest
          docker build -t "$IMAGE_NAME" .
          docker push "$IMAGE_NAME"
